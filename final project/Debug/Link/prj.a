;/*******************************************************
;This program was created by the CodeWizardAVR V3.34
;Automatic Program Generator
;© Copyright 1998-2018 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 1/30/2019
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdlib.h>
;
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $0000000D VOL: 0
   .equ __lcd_port=0x15 ;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001E #endasm
;#include <lcd.h>
;
;// Declare your global variables here
;void main(void)
; 0000 0023 {

	.CSEG
;PCODE: $00000010 VOL: 0
; 0000 0024 
; 0000 0025 unsigned int op= 0;
; 0000 0026 long int_R;// result from operations
; 0000 0027 char Char_R;// char shows on lcd
; 0000 0028 
; 0000 0029 unsigned int num1,num2= 0;//numbers from input
; 0000 002A unsigned int digit_tmp = 11;//default
; 0000 002B 
; 0000 002C PORTC=0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;	op -> R16,R17
;	int_R -> Y+4
;	Char_R -> R19
;	num1 -> R20,R21
;	num2 -> Y+2
;	digit_tmp -> Y+0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002D DDRC=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 002E PORTD=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002F DDRD=0x0F;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0030 ACSR=0x80;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0031 SFIOR=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0032 
; 0000 0033 
; 0000 0034 
; 0000 0035 lcd_init(16);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0036 while (1)///////////////////////////////chech 4ever
;PCODE: $0000002A VOL: 0
; 0000 0037       {
; 0000 0038       PORTD = 0b00000001; //check if the first row is pressed
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0039 
; 0000 003A       if (PIND == 0b00010001)//check if the first column is pressed= number 1
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 003B       {
; 0000 003C          while (PIND == 0b00010001){
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003D             PORTD = 0;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 003E          }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 003F          lcd_putchar('1');
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0040          digit_tmp= 1;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0041          delay_ms(200);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0042       }
; 0000 0043       else if (PIND == 0b00100001)//check if the sec column is pressed = bumber 2
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0044       {
; 0000 0045          while (PIND == 0b00100001){
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0046             PORTD = 0;//reset portD
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0047          }
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0048          lcd_putchar('2');
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0049          digit_tmp = 2;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 004A          delay_ms(200);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 004B       }
; 0000 004C       else if (PIND == 0b01000001)//check if the 3rd column is pressed number 3
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 004D       {
; 0000 004E          while (PIND == 0b01000001){
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 004F             PORTD = 0;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0050          }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0051          lcd_putchar('3');
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0052          digit_tmp = 3;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0053          delay_ms(200);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0054       }
; 0000 0055       else if (PIND == 0b10000001)//first op is / division
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0056       {
; 0000 0057          while (PIND == 0b10000001){
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0058             PORTD = 0;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0059          }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 005A          lcd_putchar('/');
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 005B          op = 1;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 005C          delay_ms(200);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 005D       }
; 0000 005E 
; 0000 005F       PORTD = 0b00000010;  // row 2 is preseeed
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0060       if (PIND == 0b00010010)
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0061       {
; 0000 0062          while (PIND == 0b00010010){ // check if 4 is pressed
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0063             PORTD = 0;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0064          }
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0065          lcd_putchar('4');
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0066          digit_tmp = 4;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0067          delay_ms(200);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0068       }
; 0000 0069       else if (PIND == 0b00100010)
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 006A       {
; 0000 006B          while (PIND == 0b00100010){ //check for num5
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 006C             PORTD = 0;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 006D          }
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 006E          lcd_putchar('5');
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 006F          digit_tmp= 5;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0070          delay_ms(200);
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0071       }
; 0000 0072       else if (PIND == 0b01000010)
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0073       {
; 0000 0074          while (PIND == 0b01000010){// check for number 6
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0075             PORTD = 0;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0076          }
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0077          lcd_putchar('6');
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0078          digit_tmp = 6;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0079          delay_ms(200);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 007A       }
; 0000 007B       else if (PIND == 0b10000010)
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 007C       {
; 0000 007D          while (PIND == 0b10000010){ // check for * op
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 007E             PORTD = 0;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 007F          }
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0080          lcd_putchar('*');
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0081          op = 2;
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0082          delay_ms(200);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0000 0083       }
; 0000 0084 
; 0000 0085       PORTD = 0b00000100;
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 0086 
; 0000 0087       if (PIND == 0b00010100)
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 0088       {
; 0000 0089          while (PIND == 0b00010100){ //check for number 7
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 008A             PORTD = 0;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 008B          }
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 008C          lcd_putchar('7');
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 008D          digit_tmp = 7;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 008E          delay_ms(200);
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 008F       }
; 0000 0090       else if (PIND == 0b00100100)
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0091       {
; 0000 0092          while (PIND == 0b00100100){ // check for number 8
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0093             PORTD = 0;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0094          }
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0095          lcd_putchar('8');
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 0096          digit_tmp = 8;
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0097          delay_ms(200);
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 0098       }
; 0000 0099       else if (PIND == 0b01000100)
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 009A       {
; 0000 009B          while (PIND == 0b01000100){// check for number 9
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 009C             PORTD = 0;
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 009D          }
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 009E          lcd_putchar('9');
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 009F          digit_tmp = 9;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 00A0          delay_ms(200);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 00A1       }
; 0000 00A2       else if (PIND == 0b10000100)
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00A3       {
; 0000 00A4          while (PIND == 0b10000100){  //check for - operation
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00A5             PORTD = 0;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00A6          }
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00A7          lcd_putchar('-');
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00A8          op = 3;
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00A9          delay_ms(200);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00AA       }
; 0000 00AB 
; 0000 00AC       PORTD = 0b00001000;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00AD 
; 0000 00AE       if (PIND == 0b00011000)
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00AF       {
; 0000 00B0          while (PIND == 0b00011000){ // if the button number 13 is pressed do the reset
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00B1             PORTD = 0;
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
; 0000 00B2          }
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00B3          lcd_clear();
;PCODE: $00000134 VOL: 0
; 0000 00B4          num1 = 0;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00B5          num2 = 0;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00B6          digit_tmp = 11; //default digit temp
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00B7          op= 0;
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00B8          delay_ms(200);
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00B9       }
; 0000 00BA       else if (PIND == 0b00101000)
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00BB       {
; 0000 00BC          while (PIND == 0b00101000){ // there is 0 number next to reset
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00BD             PORTD = 0;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00BE          }
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 00BF          lcd_putchar('0');
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
; 0000 00C0          digit_tmp= 0;
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00C1          delay_ms(200);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00C2       }
; 0000 00C3       else if (PIND == 0b01001000)
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0000 00C4       {
; 0000 00C5          while (PIND == 0b01001000){ //last row and 3rd column is = ... number 10
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00C6             PORTD = 0;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00C7          }
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00C8          lcd_putchar('=');
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00C9          digit_tmp = 10;
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00CA          delay_ms(200);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00CB       }
; 0000 00CC       else if (PIND == 0b10001000)
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00CD       {
; 0000 00CE          while (PIND == 0b10001000){ //last button for +
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00CF             PORTD = 0;
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00D0          }
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00D1          lcd_putchar('+');
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
; 0000 00D2          op = 4;
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
; 0000 00D3          delay_ms(200);
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00D4       }
; 0000 00D5       if (digit_tmp < 10) //get number input and add the next digit
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00D6       {
; 0000 00D7           if (op == 0)
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00D8               num1= num1*10+digit_tmp;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00D9           else
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00DA               num2= num2*10+digit_tmp;
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00DB           digit_tmp = 11;
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 00DC       }
; 0000 00DD       else if(digit_tmp== 10) // do the opertaion
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00DE       {
; 0000 00DF           switch (op){
;PCODE: $0000019A VOL: 0
; 0000 00E0           case 1:
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00E1               int_R=num1/num2;
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00E2               break;
;PCODE: $000001A2 VOL: 0
; 0000 00E3           case 2:
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00E4               int_R= num1*num2;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 00E5               break;
;PCODE: $000001AB VOL: 0
; 0000 00E6           case 3:
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00E7               int_R=num1-num2;
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 00E8               break;
;PCODE: $000001B4 VOL: 0
; 0000 00E9           case 4:
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00EA               int_R =num1+num2;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 00EB               break;
;PCODE: $000001BC VOL: 0
; 0000 00EC           }
;PCODE: $000001BD VOL: 0
; 0000 00ED           lcd_clear();
;PCODE: $000001BE VOL: 0
; 0000 00EE           lcd_gotoxy(0,0);
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
; 0000 00EF           ltoa(int_R,&Char_R); //show result
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 00F0           lcd_puts(&Char_R);
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 00F1           num1= 0;
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00F2           num2 = 0;
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 00F3           digit_tmp= 11;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 00F4           op = 0;
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 00F5       }
; 0000 00F6       };
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 00F7 }
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
